name: Deploy

on:
  push:
    branches: ["main"]

concurrency:
  group: "ci-workflow"
  cancel-in-progress: false

jobs:
  build:
    runs-on: self-hosted
    environment: stage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login --password-stdin -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" "${{ secrets.DOCKER_REGISTRY_HOST }}"

      - name: Build Docker images
        run: |
          docker build -t github_runner/sso-server:test ./server
          docker build -t github_runner/sso-client:stage --build-arg REACT_APP_API_URL=http://ifedoseev.ru:8080/api/v1 ./client
          docker tag github_runner/sso-server:test ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:test
          docker tag github_runner/sso-client:stage ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-client:stage

      - name: Push Test Docker image
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:test

  test:
    runs-on: self-hosted
    needs: build
    environment: stage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build Docker image
        run: |
          docker build -t github_runner/sso-server:test -f ./server/Dockerfile.test ./server
      
      - name: Run Unit tests
        run: |
          docker run --rm github_runner/sso-server:test make test-unit

      - name: Start Integration stand
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no root@ifedoseev.ru "cd /root/chat_app/test && docker compose down && docker compose up -d --build --force-recreate"

      - name: Run Integration tests
        run:
          docker run --rm
            -e ENV=test
            -e TOKEN_TTL=1h
            -e JWT_SECRET=rMVNcr6fA0QV2J0985B6GAbRMwQ3Sp
            -e GRPC_HOST=ifedoseev.ru
            -e GRPC_PORT=44045
            -e GRPC_TIMEOUT=10h
            -e HTTP_HOST=ifedoseev.ru
            -e HTTP_PORT=8081
            -e POSTGRES_USER=chat_app
            -e POSTGRES_DATABASE=sso
            -e POSTGRES_PASSWORD=nDm3b6D7eGwupcYaZsRe
            -e POSTGRES_HOST=ifedoseev.ru
            -e POSTGRES_PORT=5532
            github_runner/sso-server:test make test-integration

      - name: Stop Integration stand
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no root@ifedoseev.ru "cd chat_app/test && docker compose down"
          rm deploy_key.pem

      - name: Delete Template Docker image (Dockerfile.test)
        run: |
          docker rmi -f github_runner/sso-server:test

  push-image:
    runs-on: self-hosted
    needs: test
    environment: stage

    steps:
      - name: Push Stage Docker image
        run: |
          docker tag ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:test ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:stage
          docker push ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:stage
          docker push ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-client:stage

      - name: Delete Docker images
        run: |
          docker rmi -f \
            github_runner/sso-server:test \
            github_runner/sso-client:stage \
            ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:test \
            ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-server:stage \
            ${{ secrets.DOCKER_REGISTRY_HOST }}/sso-client:stage

  deploy-stage:
    runs-on: self-hosted
    needs: push-image
    environment: stage

    steps:
      - name: Start Integration stand
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no root@ifedoseev.ru "cd /root/chat_app/stage && docker compose down && docker compose up -d --build --force-recreate"